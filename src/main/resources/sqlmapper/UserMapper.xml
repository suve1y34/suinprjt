<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.kr.sikim.suinproject.mapper.UserMapper">
    <resultMap id="UserMap" type="co.kr.sikim.suinproject.domain.User">
        <id     property="userId"           column="user_id"/>
        <result property="userEmail"        column="user_email"/>
        <result property="userPassword"     column="user_password"/>
        <result property="userName"         column="user_name"/>
        <result property="nickname"         column="nickname"/>
        <result property="userPhone"        column="user_phone"/>
        <result property="goalYearlyCount"  column="goal_yearly_count"/>
        <result property="createdDatetime"  column="created_datetime"/>
        <result property="modifiedDatetime" column="modified_datetime"/>
    </resultMap>

    <insert id="insertUser" parameterType="co.kr.sikim.suinproject.domain.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO `user`
        (user_email, user_password, user_name, nickname, user_phone)
        VALUES
        (#{userEmail}, #{userPassword}, #{userName}, #{nickname}, #{userPhone})
    </insert>

    <update id="updateUser" parameterType="co.kr.sikim.suinproject.domain.User">
        UPDATE
        `user`
        SET
        nickname   = #{nickname},
        user_phone = #{userPhone},
        goal_yearly_count = #{goalYearlyCount},
        modified_datetime = CURRENT_TIMESTAMP
        WHERE
        user_id = #{userId}
    </update>

    <delete id="deleteUserById" parameterType="long">
        DELETE FROM `user` WHERE user_id = #{userId}
    </delete>

    <select id="selectUserById" parameterType="long" resultMap="UserMap">
        SELECT * FROM `user` WHERE user_id = #{userId}
    </select>

    <select id="selectUserByEmail" parameterType="string" resultMap="UserMap">
        SELECT * FROM `user` WHERE user_email = #{userEmail}
    </select>

    <select id="existsUserByUserEmail" parameterType="string" resultType="boolean">
        SELECT CASE WHEN COUNT(1) > 0 THEN TRUE ELSE FALSE END
        FROM `user` WHERE user_email = #{userEmail}
    </select>

    <select id="existsUserByNickname" parameterType="string" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM `user`
            WHERE nickname = #{nickname}
        )
    </select>

    <select id="existsUserByNicknameAndNotUserId" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM `user`
            WHERE nickname = #{nickname}
            AND user_id != #{userId}
        )
    </select>
</mapper>